generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(cuid())
  clerkId     String        @unique
  firstName   String
  lastName    String
  email       String        @unique
  role        UserRole      @default(USER)
  enrollments Enrollment[]
  Transaction Transaction[]
}

model Course {
  id          String        @id @default(cuid())
  title       String
  description String?
  price       Int
  enrollments Enrollment[]
  sections    Section[]
  Transaction Transaction[]
}

model Section {
  id       String        @id @default(cuid())
  title    String
  courseId String
  pdfs     PDFResource[]
  course   Course        @relation(fields: [courseId], references: [id])
  test     Test?
  videos   Video[]
}

model Video {
  id            String  @id @default(cuid())
  title         String
  cloudinaryUrl String
  sectionId     String
  section       Section @relation(fields: [sectionId], references: [id])
}

model PDFResource {
  id            String  @id @default(cuid())
  title         String
  cloudinaryUrl String
  sectionId     String
  section       Section @relation(fields: [sectionId], references: [id])
}

model Enrollment {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  startDate DateTime @default(now())
  endDate   DateTime
  isActive  Boolean  @default(true)
  course    Course   @relation(fields: [courseId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Test {
  id        String  @id @default(cuid())
  title     String
  questions String
  sectionId String  @unique
  section   Section @relation(fields: [sectionId], references: [id])
}

model Transaction {
  id                String   @id
  transactionId     String   @unique
  transactionAmount Int
  used              Boolean  @default(false)
  usedById          String?
  courseId          String?
  createdAt         DateTime @default(now())
  Course            Course?  @relation(fields: [courseId], references: [id])
  User              User?    @relation(fields: [usedById], references: [id])
}

enum UserRole {
  ADMIN
  USER
}
